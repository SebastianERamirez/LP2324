Grammar:

Rule 0     S' -> Programa
Rule 1     Programa -> Programa Clase ;
Rule 2     Programa -> Clase ;
Rule 3     Clase -> CLASS TYPEID opcionalPadre { lista_atr_metodos }
Rule 4     opcionalPadre -> INHERITS TYPEID
Rule 5     opcionalPadre -> <empty>
Rule 6     lista_atr_metodos -> Metodo ; lista_atr_metodos
Rule 7     lista_atr_metodos -> Atributo ; lista_atr_metodos
Rule 8     lista_atr_metodos -> <empty>
Rule 9     Atributo -> OBJECTID : TYPEID opcional_expr
Rule 10    opcional_expr -> OBJECTID ASSIGN Expresion
Rule 11    opcional_expr -> <empty>
Rule 12    Metodo -> OBJECTID ( Formal lista_formal ) : TYPEID { Expresion }
Rule 13    Metodo -> OBJECTID ( ) : TYPEID { Expresion }
Rule 14    lista_formal -> , Formal lista_formal
Rule 15    lista_formal -> <empty>
Rule 16    Formal -> OBJECTID : TYPEID
Rule 17    Expresion -> BOOL_CONST
Rule 18    Expresion -> STR_CONST
Rule 19    Expresion -> INT_CONST
Rule 20    Expresion -> OBJECTID
Rule 21    Expresion -> { lista_expr_pc }
Rule 22    Expresion -> NEW TYPEID
Rule 23    Expresion -> CASE Expresion OF lista_expr_case ESAC
Rule 24    Expresion -> WHILE Expresion LOOP Expresion POOL
Rule 25    Expresion -> IF Expresion THEN Expresion ELSE Expresion FI
Rule 26    Expresion -> OBJECTID ( )
Rule 27    Expresion -> OBJECTID ( Expresion lista_expr )
Rule 28    Expresion -> Expresion . OBJECTID ( )
Rule 29    Expresion -> Expresion . OBJECTID ( Expresion lista_expr )
Rule 30    Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
Rule 31    Expresion -> Expresion @ TYPEID . OBJECTID ( )
Rule 32    Expresion -> ~ Expresion
Rule 33    Expresion -> ISVOID Expresion
Rule 34    Expresion -> NOT Expresion
Rule 35    Expresion -> ( Expresion )
Rule 36    Expresion -> Expresion = Expresion
Rule 37    Expresion -> Expresion DARROW Expresion
Rule 38    Expresion -> Expresion < Expresion
Rule 39    Expresion -> Expresion + Expresion
Rule 40    Expresion -> Expresion - Expresion
Rule 41    Expresion -> Expresion / Expresion
Rule 42    Expresion -> Expresion * Expresion
Rule 43    Expresion -> OBJECTID ASSIGN Expresion
Rule 44    lista_expr -> , Expresion lista_expr
Rule 45    lista_expr -> <empty>
Rule 46    lista_expr_let -> , OBJECTID : TYPEID ASSIGN Expresion
Rule 47    lista_expr_let -> <empty>
Rule 48    lista_expr_case -> OBJECTID : TYPEID DARROW Expresion ; lista_expr_case
Rule 49    lista_expr_case -> OBJECTID : TYPEID DARROW Expresion ;
Rule 50    lista_expr_pc -> Expresion ; lista_expr_pc
Rule 51    lista_expr_pc -> Expresion ;

Unused terminals:

    IN
    LET
    LE

Terminals, with rules where they appear:

(                    : 12 13 26 27 28 29 30 31 35
)                    : 12 13 26 27 28 29 30 31 35
*                    : 42
+                    : 39
,                    : 14 44 46
-                    : 40
.                    : 28 29 30 31
/                    : 41
:                    : 9 12 13 16 46 48 49
;                    : 1 2 6 7 48 49 50 51
<                    : 38
=                    : 36
@                    : 30 31
ASSIGN               : 10 43 46
BOOL_CONST           : 17
CASE                 : 23
CLASS                : 3
DARROW               : 37 48 49
ELSE                 : 25
ESAC                 : 23
FI                   : 25
IF                   : 25
IN                   : 
INHERITS             : 4
INT_CONST            : 19
ISVOID               : 33
LE                   : 
LET                  : 
LOOP                 : 24
NEW                  : 22
NOT                  : 34
OBJECTID             : 9 10 12 13 16 20 26 27 28 29 30 31 43 46 48 49
OF                   : 23
POOL                 : 24
STR_CONST            : 18
THEN                 : 25
TYPEID               : 3 4 9 12 13 16 22 30 31 46 48 49
WHILE                : 24
error                : 
{                    : 3 12 13 21
}                    : 3 12 13 21
~                    : 32

Nonterminals, with rules where they appear:

Atributo             : 7
Clase                : 1 2
Expresion            : 10 12 13 23 24 24 25 25 25 27 28 29 29 30 30 31 32 33 34 35 36 36 37 37 38 38 39 39 40 40 41 41 42 42 43 44 46 48 49 50 51
Formal               : 12 14
Metodo               : 6
Programa             : 1 0
lista_atr_metodos    : 3 6 7
lista_expr           : 27 29 30 44
lista_expr_case      : 23 48
lista_expr_let       : 
lista_expr_pc        : 21 50
lista_formal         : 12 14
opcionalPadre        : 3
opcional_expr        : 9


state 0

    (0) S' -> . Programa
    (1) Programa -> . Programa Clase ;
    (2) Programa -> . Clase ;
    (3) Clase -> . CLASS TYPEID opcionalPadre { lista_atr_metodos }
    CLASS           shift and go to state 3

    Programa                       shift and go to state 1
    Clase                          shift and go to state 2

state 1

    (0) S' -> Programa .
    (1) Programa -> Programa . Clase ;
    (3) Clase -> . CLASS TYPEID opcionalPadre { lista_atr_metodos }
    CLASS           shift and go to state 3

    Clase                          shift and go to state 4

state 2

    (2) Programa -> Clase . ;
    ;               shift and go to state 5


state 3

    (3) Clase -> CLASS . TYPEID opcionalPadre { lista_atr_metodos }
    TYPEID          shift and go to state 6


state 4

    (1) Programa -> Programa Clase . ;
    ;               shift and go to state 7


state 5

    (2) Programa -> Clase ; .
    CLASS           reduce using rule 2 (Programa -> Clase ; .)
    $end            reduce using rule 2 (Programa -> Clase ; .)


state 6

    (3) Clase -> CLASS TYPEID . opcionalPadre { lista_atr_metodos }
    (4) opcionalPadre -> . INHERITS TYPEID
    (5) opcionalPadre -> .
    INHERITS        shift and go to state 9
    {               reduce using rule 5 (opcionalPadre -> .)

    opcionalPadre                  shift and go to state 8

state 7

    (1) Programa -> Programa Clase ; .
    CLASS           reduce using rule 1 (Programa -> Programa Clase ; .)
    $end            reduce using rule 1 (Programa -> Programa Clase ; .)


state 8

    (3) Clase -> CLASS TYPEID opcionalPadre . { lista_atr_metodos }
    {               shift and go to state 10


state 9

    (4) opcionalPadre -> INHERITS . TYPEID
    TYPEID          shift and go to state 11


state 10

    (3) Clase -> CLASS TYPEID opcionalPadre { . lista_atr_metodos }
    (6) lista_atr_metodos -> . Metodo ; lista_atr_metodos
    (7) lista_atr_metodos -> . Atributo ; lista_atr_metodos
    (8) lista_atr_metodos -> .
    (12) Metodo -> . OBJECTID ( Formal lista_formal ) : TYPEID { Expresion }
    (13) Metodo -> . OBJECTID ( ) : TYPEID { Expresion }
    (9) Atributo -> . OBJECTID : TYPEID opcional_expr
    }               reduce using rule 8 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 15

    lista_atr_metodos              shift and go to state 12
    Metodo                         shift and go to state 13
    Atributo                       shift and go to state 14

state 11

    (4) opcionalPadre -> INHERITS TYPEID .
    {               reduce using rule 4 (opcionalPadre -> INHERITS TYPEID .)


state 12

    (3) Clase -> CLASS TYPEID opcionalPadre { lista_atr_metodos . }
    }               shift and go to state 16


state 13

    (6) lista_atr_metodos -> Metodo . ; lista_atr_metodos
    ;               shift and go to state 17


state 14

    (7) lista_atr_metodos -> Atributo . ; lista_atr_metodos
    ;               shift and go to state 18


state 15

    (12) Metodo -> OBJECTID . ( Formal lista_formal ) : TYPEID { Expresion }
    (13) Metodo -> OBJECTID . ( ) : TYPEID { Expresion }
    (9) Atributo -> OBJECTID . : TYPEID opcional_expr
    (               shift and go to state 19
    :               shift and go to state 20


state 16

    (3) Clase -> CLASS TYPEID opcionalPadre { lista_atr_metodos } .
    ;               reduce using rule 3 (Clase -> CLASS TYPEID opcionalPadre { lista_atr_metodos } .)


state 17

    (6) lista_atr_metodos -> Metodo ; . lista_atr_metodos
    (6) lista_atr_metodos -> . Metodo ; lista_atr_metodos
    (7) lista_atr_metodos -> . Atributo ; lista_atr_metodos
    (8) lista_atr_metodos -> .
    (12) Metodo -> . OBJECTID ( Formal lista_formal ) : TYPEID { Expresion }
    (13) Metodo -> . OBJECTID ( ) : TYPEID { Expresion }
    (9) Atributo -> . OBJECTID : TYPEID opcional_expr
    }               reduce using rule 8 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 15

    Metodo                         shift and go to state 13
    lista_atr_metodos              shift and go to state 21
    Atributo                       shift and go to state 14

state 18

    (7) lista_atr_metodos -> Atributo ; . lista_atr_metodos
    (6) lista_atr_metodos -> . Metodo ; lista_atr_metodos
    (7) lista_atr_metodos -> . Atributo ; lista_atr_metodos
    (8) lista_atr_metodos -> .
    (12) Metodo -> . OBJECTID ( Formal lista_formal ) : TYPEID { Expresion }
    (13) Metodo -> . OBJECTID ( ) : TYPEID { Expresion }
    (9) Atributo -> . OBJECTID : TYPEID opcional_expr
    }               reduce using rule 8 (lista_atr_metodos -> .)
    OBJECTID        shift and go to state 15

    Atributo                       shift and go to state 14
    lista_atr_metodos              shift and go to state 22
    Metodo                         shift and go to state 13

state 19

    (12) Metodo -> OBJECTID ( . Formal lista_formal ) : TYPEID { Expresion }
    (13) Metodo -> OBJECTID ( . ) : TYPEID { Expresion }
    (16) Formal -> . OBJECTID : TYPEID
    )               shift and go to state 25
    OBJECTID        shift and go to state 23

    Formal                         shift and go to state 24

state 20

    (9) Atributo -> OBJECTID : . TYPEID opcional_expr
    TYPEID          shift and go to state 26


state 21

    (6) lista_atr_metodos -> Metodo ; lista_atr_metodos .
    }               reduce using rule 6 (lista_atr_metodos -> Metodo ; lista_atr_metodos .)


state 22

    (7) lista_atr_metodos -> Atributo ; lista_atr_metodos .
    }               reduce using rule 7 (lista_atr_metodos -> Atributo ; lista_atr_metodos .)


state 23

    (16) Formal -> OBJECTID . : TYPEID
    :               shift and go to state 27


state 24

    (12) Metodo -> OBJECTID ( Formal . lista_formal ) : TYPEID { Expresion }
    (14) lista_formal -> . , Formal lista_formal
    (15) lista_formal -> .
    ,               shift and go to state 29
    )               reduce using rule 15 (lista_formal -> .)

    lista_formal                   shift and go to state 28

state 25

    (13) Metodo -> OBJECTID ( ) . : TYPEID { Expresion }
    :               shift and go to state 30


state 26

    (9) Atributo -> OBJECTID : TYPEID . opcional_expr
    (10) opcional_expr -> . OBJECTID ASSIGN Expresion
    (11) opcional_expr -> .
    OBJECTID        shift and go to state 31
    ;               reduce using rule 11 (opcional_expr -> .)

    opcional_expr                  shift and go to state 32

state 27

    (16) Formal -> OBJECTID : . TYPEID
    TYPEID          shift and go to state 33


state 28

    (12) Metodo -> OBJECTID ( Formal lista_formal . ) : TYPEID { Expresion }
    )               shift and go to state 34


state 29

    (14) lista_formal -> , . Formal lista_formal
    (16) Formal -> . OBJECTID : TYPEID
    OBJECTID        shift and go to state 23

    Formal                         shift and go to state 35

state 30

    (13) Metodo -> OBJECTID ( ) : . TYPEID { Expresion }
    TYPEID          shift and go to state 36


state 31

    (10) opcional_expr -> OBJECTID . ASSIGN Expresion
    ASSIGN          shift and go to state 37


state 32

    (9) Atributo -> OBJECTID : TYPEID opcional_expr .
    ;               reduce using rule 9 (Atributo -> OBJECTID : TYPEID opcional_expr .)


state 33

    (16) Formal -> OBJECTID : TYPEID .
    ,               reduce using rule 16 (Formal -> OBJECTID : TYPEID .)
    )               reduce using rule 16 (Formal -> OBJECTID : TYPEID .)


state 34

    (12) Metodo -> OBJECTID ( Formal lista_formal ) . : TYPEID { Expresion }
    :               shift and go to state 38


state 35

    (14) lista_formal -> , Formal . lista_formal
    (14) lista_formal -> . , Formal lista_formal
    (15) lista_formal -> .
    ,               shift and go to state 29
    )               reduce using rule 15 (lista_formal -> .)

    lista_formal                   shift and go to state 39

state 36

    (13) Metodo -> OBJECTID ( ) : TYPEID . { Expresion }
    {               shift and go to state 40


state 37

    (10) opcional_expr -> OBJECTID ASSIGN . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 42

state 38

    (12) Metodo -> OBJECTID ( Formal lista_formal ) : . TYPEID { Expresion }
    TYPEID          shift and go to state 55


state 39

    (14) lista_formal -> , Formal lista_formal .
    )               reduce using rule 14 (lista_formal -> , Formal lista_formal .)


state 40

    (13) Metodo -> OBJECTID ( ) : TYPEID { . Expresion }
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 56

state 41

    (20) Expresion -> OBJECTID .
    (26) Expresion -> OBJECTID . ( )
    (27) Expresion -> OBJECTID . ( Expresion lista_expr )
    (43) Expresion -> OBJECTID . ASSIGN Expresion
    .               reduce using rule 20 (Expresion -> OBJECTID .)
    @               reduce using rule 20 (Expresion -> OBJECTID .)
    =               reduce using rule 20 (Expresion -> OBJECTID .)
    DARROW          reduce using rule 20 (Expresion -> OBJECTID .)
    <               reduce using rule 20 (Expresion -> OBJECTID .)
    +               reduce using rule 20 (Expresion -> OBJECTID .)
    -               reduce using rule 20 (Expresion -> OBJECTID .)
    /               reduce using rule 20 (Expresion -> OBJECTID .)
    *               reduce using rule 20 (Expresion -> OBJECTID .)
    ;               reduce using rule 20 (Expresion -> OBJECTID .)
    }               reduce using rule 20 (Expresion -> OBJECTID .)
    OF              reduce using rule 20 (Expresion -> OBJECTID .)
    LOOP            reduce using rule 20 (Expresion -> OBJECTID .)
    THEN            reduce using rule 20 (Expresion -> OBJECTID .)
    )               reduce using rule 20 (Expresion -> OBJECTID .)
    ,               reduce using rule 20 (Expresion -> OBJECTID .)
    POOL            reduce using rule 20 (Expresion -> OBJECTID .)
    ELSE            reduce using rule 20 (Expresion -> OBJECTID .)
    FI              reduce using rule 20 (Expresion -> OBJECTID .)
    (               shift and go to state 57
    ASSIGN          shift and go to state 58


state 42

    (10) opcional_expr -> OBJECTID ASSIGN Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    ;               reduce using rule 10 (opcional_expr -> OBJECTID ASSIGN Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 43

    (17) Expresion -> BOOL_CONST .
    .               reduce using rule 17 (Expresion -> BOOL_CONST .)
    @               reduce using rule 17 (Expresion -> BOOL_CONST .)
    =               reduce using rule 17 (Expresion -> BOOL_CONST .)
    DARROW          reduce using rule 17 (Expresion -> BOOL_CONST .)
    <               reduce using rule 17 (Expresion -> BOOL_CONST .)
    +               reduce using rule 17 (Expresion -> BOOL_CONST .)
    -               reduce using rule 17 (Expresion -> BOOL_CONST .)
    /               reduce using rule 17 (Expresion -> BOOL_CONST .)
    *               reduce using rule 17 (Expresion -> BOOL_CONST .)
    ;               reduce using rule 17 (Expresion -> BOOL_CONST .)
    }               reduce using rule 17 (Expresion -> BOOL_CONST .)
    OF              reduce using rule 17 (Expresion -> BOOL_CONST .)
    LOOP            reduce using rule 17 (Expresion -> BOOL_CONST .)
    THEN            reduce using rule 17 (Expresion -> BOOL_CONST .)
    )               reduce using rule 17 (Expresion -> BOOL_CONST .)
    ,               reduce using rule 17 (Expresion -> BOOL_CONST .)
    POOL            reduce using rule 17 (Expresion -> BOOL_CONST .)
    ELSE            reduce using rule 17 (Expresion -> BOOL_CONST .)
    FI              reduce using rule 17 (Expresion -> BOOL_CONST .)


state 44

    (18) Expresion -> STR_CONST .
    .               reduce using rule 18 (Expresion -> STR_CONST .)
    @               reduce using rule 18 (Expresion -> STR_CONST .)
    =               reduce using rule 18 (Expresion -> STR_CONST .)
    DARROW          reduce using rule 18 (Expresion -> STR_CONST .)
    <               reduce using rule 18 (Expresion -> STR_CONST .)
    +               reduce using rule 18 (Expresion -> STR_CONST .)
    -               reduce using rule 18 (Expresion -> STR_CONST .)
    /               reduce using rule 18 (Expresion -> STR_CONST .)
    *               reduce using rule 18 (Expresion -> STR_CONST .)
    ;               reduce using rule 18 (Expresion -> STR_CONST .)
    }               reduce using rule 18 (Expresion -> STR_CONST .)
    OF              reduce using rule 18 (Expresion -> STR_CONST .)
    LOOP            reduce using rule 18 (Expresion -> STR_CONST .)
    THEN            reduce using rule 18 (Expresion -> STR_CONST .)
    )               reduce using rule 18 (Expresion -> STR_CONST .)
    ,               reduce using rule 18 (Expresion -> STR_CONST .)
    POOL            reduce using rule 18 (Expresion -> STR_CONST .)
    ELSE            reduce using rule 18 (Expresion -> STR_CONST .)
    FI              reduce using rule 18 (Expresion -> STR_CONST .)


state 45

    (19) Expresion -> INT_CONST .
    .               reduce using rule 19 (Expresion -> INT_CONST .)
    @               reduce using rule 19 (Expresion -> INT_CONST .)
    =               reduce using rule 19 (Expresion -> INT_CONST .)
    DARROW          reduce using rule 19 (Expresion -> INT_CONST .)
    <               reduce using rule 19 (Expresion -> INT_CONST .)
    +               reduce using rule 19 (Expresion -> INT_CONST .)
    -               reduce using rule 19 (Expresion -> INT_CONST .)
    /               reduce using rule 19 (Expresion -> INT_CONST .)
    *               reduce using rule 19 (Expresion -> INT_CONST .)
    ;               reduce using rule 19 (Expresion -> INT_CONST .)
    }               reduce using rule 19 (Expresion -> INT_CONST .)
    OF              reduce using rule 19 (Expresion -> INT_CONST .)
    LOOP            reduce using rule 19 (Expresion -> INT_CONST .)
    THEN            reduce using rule 19 (Expresion -> INT_CONST .)
    )               reduce using rule 19 (Expresion -> INT_CONST .)
    ,               reduce using rule 19 (Expresion -> INT_CONST .)
    POOL            reduce using rule 19 (Expresion -> INT_CONST .)
    ELSE            reduce using rule 19 (Expresion -> INT_CONST .)
    FI              reduce using rule 19 (Expresion -> INT_CONST .)


state 46

    (21) Expresion -> { . lista_expr_pc }
    (50) lista_expr_pc -> . Expresion ; lista_expr_pc
    (51) lista_expr_pc -> . Expresion ;
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    lista_expr_pc                  shift and go to state 68
    Expresion                      shift and go to state 69

state 47

    (22) Expresion -> NEW . TYPEID
    TYPEID          shift and go to state 70


state 48

    (23) Expresion -> CASE . Expresion OF lista_expr_case ESAC
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 71

state 49

    (24) Expresion -> WHILE . Expresion LOOP Expresion POOL
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 72

state 50

    (25) Expresion -> IF . Expresion THEN Expresion ELSE Expresion FI
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 73

state 51

    (35) Expresion -> ( . Expresion )
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 74

state 52

    (32) Expresion -> ~ . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 75

state 53

    (33) Expresion -> ISVOID . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 76

state 54

    (34) Expresion -> NOT . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 77

state 55

    (12) Metodo -> OBJECTID ( Formal lista_formal ) : TYPEID . { Expresion }
    {               shift and go to state 78


state 56

    (13) Metodo -> OBJECTID ( ) : TYPEID { Expresion . }
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    }               shift and go to state 79
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 57

    (26) Expresion -> OBJECTID ( . )
    (27) Expresion -> OBJECTID ( . Expresion lista_expr )
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    )               shift and go to state 80
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 81

state 58

    (43) Expresion -> OBJECTID ASSIGN . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 82

state 59

    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    OBJECTID        shift and go to state 83


state 60

    (30) Expresion -> Expresion @ . TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion @ . TYPEID . OBJECTID ( )
    TYPEID          shift and go to state 84


state 61

    (36) Expresion -> Expresion = . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 85

state 62

    (37) Expresion -> Expresion DARROW . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 86

state 63

    (38) Expresion -> Expresion < . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 87

state 64

    (39) Expresion -> Expresion + . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 88

state 65

    (40) Expresion -> Expresion - . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 89

state 66

    (41) Expresion -> Expresion / . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 90

state 67

    (42) Expresion -> Expresion * . Expresion
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 91

state 68

    (21) Expresion -> { lista_expr_pc . }
    }               shift and go to state 92


state 69

    (50) lista_expr_pc -> Expresion . ; lista_expr_pc
    (51) lista_expr_pc -> Expresion . ;
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    ;               shift and go to state 93
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 70

    (22) Expresion -> NEW TYPEID .
    .               reduce using rule 22 (Expresion -> NEW TYPEID .)
    @               reduce using rule 22 (Expresion -> NEW TYPEID .)
    =               reduce using rule 22 (Expresion -> NEW TYPEID .)
    DARROW          reduce using rule 22 (Expresion -> NEW TYPEID .)
    <               reduce using rule 22 (Expresion -> NEW TYPEID .)
    +               reduce using rule 22 (Expresion -> NEW TYPEID .)
    -               reduce using rule 22 (Expresion -> NEW TYPEID .)
    /               reduce using rule 22 (Expresion -> NEW TYPEID .)
    *               reduce using rule 22 (Expresion -> NEW TYPEID .)
    ;               reduce using rule 22 (Expresion -> NEW TYPEID .)
    }               reduce using rule 22 (Expresion -> NEW TYPEID .)
    OF              reduce using rule 22 (Expresion -> NEW TYPEID .)
    LOOP            reduce using rule 22 (Expresion -> NEW TYPEID .)
    THEN            reduce using rule 22 (Expresion -> NEW TYPEID .)
    )               reduce using rule 22 (Expresion -> NEW TYPEID .)
    ,               reduce using rule 22 (Expresion -> NEW TYPEID .)
    POOL            reduce using rule 22 (Expresion -> NEW TYPEID .)
    ELSE            reduce using rule 22 (Expresion -> NEW TYPEID .)
    FI              reduce using rule 22 (Expresion -> NEW TYPEID .)


state 71

    (23) Expresion -> CASE Expresion . OF lista_expr_case ESAC
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    OF              shift and go to state 94
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 72

    (24) Expresion -> WHILE Expresion . LOOP Expresion POOL
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    LOOP            shift and go to state 95
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 73

    (25) Expresion -> IF Expresion . THEN Expresion ELSE Expresion FI
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    THEN            shift and go to state 96
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 74

    (35) Expresion -> ( Expresion . )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    )               shift and go to state 97
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 75

    (32) Expresion -> ~ Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 32 (Expresion -> ~ Expresion .)
    }               reduce using rule 32 (Expresion -> ~ Expresion .)
    OF              reduce using rule 32 (Expresion -> ~ Expresion .)
    LOOP            reduce using rule 32 (Expresion -> ~ Expresion .)
    THEN            reduce using rule 32 (Expresion -> ~ Expresion .)
    )               reduce using rule 32 (Expresion -> ~ Expresion .)
    ,               reduce using rule 32 (Expresion -> ~ Expresion .)
    POOL            reduce using rule 32 (Expresion -> ~ Expresion .)
    ELSE            reduce using rule 32 (Expresion -> ~ Expresion .)
    FI              reduce using rule 32 (Expresion -> ~ Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 76

    (33) Expresion -> ISVOID Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 33 (Expresion -> ISVOID Expresion .)
    }               reduce using rule 33 (Expresion -> ISVOID Expresion .)
    OF              reduce using rule 33 (Expresion -> ISVOID Expresion .)
    LOOP            reduce using rule 33 (Expresion -> ISVOID Expresion .)
    THEN            reduce using rule 33 (Expresion -> ISVOID Expresion .)
    )               reduce using rule 33 (Expresion -> ISVOID Expresion .)
    ,               reduce using rule 33 (Expresion -> ISVOID Expresion .)
    POOL            reduce using rule 33 (Expresion -> ISVOID Expresion .)
    ELSE            reduce using rule 33 (Expresion -> ISVOID Expresion .)
    FI              reduce using rule 33 (Expresion -> ISVOID Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 77

    (34) Expresion -> NOT Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 34 (Expresion -> NOT Expresion .)
    }               reduce using rule 34 (Expresion -> NOT Expresion .)
    OF              reduce using rule 34 (Expresion -> NOT Expresion .)
    LOOP            reduce using rule 34 (Expresion -> NOT Expresion .)
    THEN            reduce using rule 34 (Expresion -> NOT Expresion .)
    )               reduce using rule 34 (Expresion -> NOT Expresion .)
    ,               reduce using rule 34 (Expresion -> NOT Expresion .)
    POOL            reduce using rule 34 (Expresion -> NOT Expresion .)
    ELSE            reduce using rule 34 (Expresion -> NOT Expresion .)
    FI              reduce using rule 34 (Expresion -> NOT Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 78

    (12) Metodo -> OBJECTID ( Formal lista_formal ) : TYPEID { . Expresion }
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 98

state 79

    (13) Metodo -> OBJECTID ( ) : TYPEID { Expresion } .
    ;               reduce using rule 13 (Metodo -> OBJECTID ( ) : TYPEID { Expresion } .)


state 80

    (26) Expresion -> OBJECTID ( ) .
    .               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    @               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    =               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    DARROW          reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    <               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    +               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    -               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    /               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    *               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    ;               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    }               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    OF              reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    LOOP            reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    THEN            reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    )               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    ,               reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    POOL            reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    ELSE            reduce using rule 26 (Expresion -> OBJECTID ( ) .)
    FI              reduce using rule 26 (Expresion -> OBJECTID ( ) .)


state 81

    (27) Expresion -> OBJECTID ( Expresion . lista_expr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    (44) lista_expr -> . , Expresion lista_expr
    (45) lista_expr -> .
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67
    ,               shift and go to state 100
    )               reduce using rule 45 (lista_expr -> .)

    lista_expr                     shift and go to state 99

state 82

    (43) Expresion -> OBJECTID ASSIGN Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    }               reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    OF              reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    LOOP            reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    THEN            reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    )               reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    ,               reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    POOL            reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    ELSE            reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    FI              reduce using rule 43 (Expresion -> OBJECTID ASSIGN Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 83

    (28) Expresion -> Expresion . OBJECTID . ( )
    (29) Expresion -> Expresion . OBJECTID . ( Expresion lista_expr )
    (               shift and go to state 101


state 84

    (30) Expresion -> Expresion @ TYPEID . . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    .               shift and go to state 102


state 85

    (36) Expresion -> Expresion = Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 36 (Expresion -> Expresion = Expresion .)
    }               reduce using rule 36 (Expresion -> Expresion = Expresion .)
    OF              reduce using rule 36 (Expresion -> Expresion = Expresion .)
    LOOP            reduce using rule 36 (Expresion -> Expresion = Expresion .)
    THEN            reduce using rule 36 (Expresion -> Expresion = Expresion .)
    )               reduce using rule 36 (Expresion -> Expresion = Expresion .)
    ,               reduce using rule 36 (Expresion -> Expresion = Expresion .)
    POOL            reduce using rule 36 (Expresion -> Expresion = Expresion .)
    ELSE            reduce using rule 36 (Expresion -> Expresion = Expresion .)
    FI              reduce using rule 36 (Expresion -> Expresion = Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 86

    (37) Expresion -> Expresion DARROW Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    }               reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    OF              reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    LOOP            reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    THEN            reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    )               reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    ,               reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    POOL            reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    ELSE            reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    FI              reduce using rule 37 (Expresion -> Expresion DARROW Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 87

    (38) Expresion -> Expresion < Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    }               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    OF              reduce using rule 38 (Expresion -> Expresion < Expresion .)
    LOOP            reduce using rule 38 (Expresion -> Expresion < Expresion .)
    THEN            reduce using rule 38 (Expresion -> Expresion < Expresion .)
    )               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    ,               reduce using rule 38 (Expresion -> Expresion < Expresion .)
    POOL            reduce using rule 38 (Expresion -> Expresion < Expresion .)
    ELSE            reduce using rule 38 (Expresion -> Expresion < Expresion .)
    FI              reduce using rule 38 (Expresion -> Expresion < Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 88

    (39) Expresion -> Expresion + Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 39 (Expresion -> Expresion + Expresion .)
    }               reduce using rule 39 (Expresion -> Expresion + Expresion .)
    OF              reduce using rule 39 (Expresion -> Expresion + Expresion .)
    LOOP            reduce using rule 39 (Expresion -> Expresion + Expresion .)
    THEN            reduce using rule 39 (Expresion -> Expresion + Expresion .)
    )               reduce using rule 39 (Expresion -> Expresion + Expresion .)
    ,               reduce using rule 39 (Expresion -> Expresion + Expresion .)
    POOL            reduce using rule 39 (Expresion -> Expresion + Expresion .)
    ELSE            reduce using rule 39 (Expresion -> Expresion + Expresion .)
    FI              reduce using rule 39 (Expresion -> Expresion + Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 89

    (40) Expresion -> Expresion - Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    }               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    OF              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    LOOP            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    THEN            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    )               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    ,               reduce using rule 40 (Expresion -> Expresion - Expresion .)
    POOL            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    ELSE            reduce using rule 40 (Expresion -> Expresion - Expresion .)
    FI              reduce using rule 40 (Expresion -> Expresion - Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 90

    (41) Expresion -> Expresion / Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 41 (Expresion -> Expresion / Expresion .)
    }               reduce using rule 41 (Expresion -> Expresion / Expresion .)
    OF              reduce using rule 41 (Expresion -> Expresion / Expresion .)
    LOOP            reduce using rule 41 (Expresion -> Expresion / Expresion .)
    THEN            reduce using rule 41 (Expresion -> Expresion / Expresion .)
    )               reduce using rule 41 (Expresion -> Expresion / Expresion .)
    ,               reduce using rule 41 (Expresion -> Expresion / Expresion .)
    POOL            reduce using rule 41 (Expresion -> Expresion / Expresion .)
    ELSE            reduce using rule 41 (Expresion -> Expresion / Expresion .)
    FI              reduce using rule 41 (Expresion -> Expresion / Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 91

    (42) Expresion -> Expresion * Expresion .
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
  ! shift/reduce conflict for . resolved as shift
  ! shift/reduce conflict for @ resolved as shift
  ! shift/reduce conflict for = resolved as shift
  ! shift/reduce conflict for DARROW resolved as shift
  ! shift/reduce conflict for < resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for * resolved as shift
    ;               reduce using rule 42 (Expresion -> Expresion * Expresion .)
    }               reduce using rule 42 (Expresion -> Expresion * Expresion .)
    OF              reduce using rule 42 (Expresion -> Expresion * Expresion .)
    LOOP            reduce using rule 42 (Expresion -> Expresion * Expresion .)
    THEN            reduce using rule 42 (Expresion -> Expresion * Expresion .)
    )               reduce using rule 42 (Expresion -> Expresion * Expresion .)
    ,               reduce using rule 42 (Expresion -> Expresion * Expresion .)
    POOL            reduce using rule 42 (Expresion -> Expresion * Expresion .)
    ELSE            reduce using rule 42 (Expresion -> Expresion * Expresion .)
    FI              reduce using rule 42 (Expresion -> Expresion * Expresion .)
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 92

    (21) Expresion -> { lista_expr_pc } .
    .               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    @               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    =               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    DARROW          reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    <               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    +               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    -               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    /               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    *               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    ;               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    }               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    OF              reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    LOOP            reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    THEN            reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    )               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    ,               reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    POOL            reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    ELSE            reduce using rule 21 (Expresion -> { lista_expr_pc } .)
    FI              reduce using rule 21 (Expresion -> { lista_expr_pc } .)


state 93

    (50) lista_expr_pc -> Expresion ; . lista_expr_pc
    (51) lista_expr_pc -> Expresion ; .
    (50) lista_expr_pc -> . Expresion ; lista_expr_pc
    (51) lista_expr_pc -> . Expresion ;
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    }               reduce using rule 51 (lista_expr_pc -> Expresion ; .)
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 69
    lista_expr_pc                  shift and go to state 103

state 94

    (23) Expresion -> CASE Expresion OF . lista_expr_case ESAC
    (48) lista_expr_case -> . OBJECTID : TYPEID DARROW Expresion ; lista_expr_case
    (49) lista_expr_case -> . OBJECTID : TYPEID DARROW Expresion ;
    OBJECTID        shift and go to state 105

    lista_expr_case                shift and go to state 104

state 95

    (24) Expresion -> WHILE Expresion LOOP . Expresion POOL
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 106

state 96

    (25) Expresion -> IF Expresion THEN . Expresion ELSE Expresion FI
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 107

state 97

    (35) Expresion -> ( Expresion ) .
    .               reduce using rule 35 (Expresion -> ( Expresion ) .)
    @               reduce using rule 35 (Expresion -> ( Expresion ) .)
    =               reduce using rule 35 (Expresion -> ( Expresion ) .)
    DARROW          reduce using rule 35 (Expresion -> ( Expresion ) .)
    <               reduce using rule 35 (Expresion -> ( Expresion ) .)
    +               reduce using rule 35 (Expresion -> ( Expresion ) .)
    -               reduce using rule 35 (Expresion -> ( Expresion ) .)
    /               reduce using rule 35 (Expresion -> ( Expresion ) .)
    *               reduce using rule 35 (Expresion -> ( Expresion ) .)
    ;               reduce using rule 35 (Expresion -> ( Expresion ) .)
    }               reduce using rule 35 (Expresion -> ( Expresion ) .)
    OF              reduce using rule 35 (Expresion -> ( Expresion ) .)
    LOOP            reduce using rule 35 (Expresion -> ( Expresion ) .)
    THEN            reduce using rule 35 (Expresion -> ( Expresion ) .)
    )               reduce using rule 35 (Expresion -> ( Expresion ) .)
    ,               reduce using rule 35 (Expresion -> ( Expresion ) .)
    POOL            reduce using rule 35 (Expresion -> ( Expresion ) .)
    ELSE            reduce using rule 35 (Expresion -> ( Expresion ) .)
    FI              reduce using rule 35 (Expresion -> ( Expresion ) .)


state 98

    (12) Metodo -> OBJECTID ( Formal lista_formal ) : TYPEID { Expresion . }
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    }               shift and go to state 108
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 99

    (27) Expresion -> OBJECTID ( Expresion lista_expr . )
    )               shift and go to state 109


state 100

    (44) lista_expr -> , . Expresion lista_expr
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 110

state 101

    (28) Expresion -> Expresion . OBJECTID ( . )
    (29) Expresion -> Expresion . OBJECTID ( . Expresion lista_expr )
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    )               shift and go to state 112
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 111

state 102

    (30) Expresion -> Expresion @ TYPEID . . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion @ TYPEID . . OBJECTID ( )
    OBJECTID        shift and go to state 113


state 103

    (50) lista_expr_pc -> Expresion ; lista_expr_pc .
    }               reduce using rule 50 (lista_expr_pc -> Expresion ; lista_expr_pc .)


state 104

    (23) Expresion -> CASE Expresion OF lista_expr_case . ESAC
    ESAC            shift and go to state 114


state 105

    (48) lista_expr_case -> OBJECTID . : TYPEID DARROW Expresion ; lista_expr_case
    (49) lista_expr_case -> OBJECTID . : TYPEID DARROW Expresion ;
    :               shift and go to state 115


state 106

    (24) Expresion -> WHILE Expresion LOOP Expresion . POOL
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    POOL            shift and go to state 116
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 107

    (25) Expresion -> IF Expresion THEN Expresion . ELSE Expresion FI
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    ELSE            shift and go to state 117
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 108

    (12) Metodo -> OBJECTID ( Formal lista_formal ) : TYPEID { Expresion } .
    ;               reduce using rule 12 (Metodo -> OBJECTID ( Formal lista_formal ) : TYPEID { Expresion } .)


state 109

    (27) Expresion -> OBJECTID ( Expresion lista_expr ) .
    .               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    @               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    =               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    DARROW          reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    <               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    +               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    -               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    /               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    *               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    ;               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    }               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    OF              reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    LOOP            reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    THEN            reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    )               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    ,               reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    POOL            reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    ELSE            reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)
    FI              reduce using rule 27 (Expresion -> OBJECTID ( Expresion lista_expr ) .)


state 110

    (44) lista_expr -> , Expresion . lista_expr
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    (44) lista_expr -> . , Expresion lista_expr
    (45) lista_expr -> .
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67
    ,               shift and go to state 100
    )               reduce using rule 45 (lista_expr -> .)

    lista_expr                     shift and go to state 118

state 111

    (29) Expresion -> Expresion . OBJECTID ( Expresion . lista_expr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    (44) lista_expr -> . , Expresion lista_expr
    (45) lista_expr -> .
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67
    ,               shift and go to state 100
    )               reduce using rule 45 (lista_expr -> .)

    lista_expr                     shift and go to state 119

state 112

    (28) Expresion -> Expresion . OBJECTID ( ) .
    .               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    @               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    =               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    DARROW          reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    <               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    +               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    -               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    /               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    *               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    ;               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    }               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    OF              reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    LOOP            reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    THEN            reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    )               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    ,               reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    POOL            reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    ELSE            reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)
    FI              reduce using rule 28 (Expresion -> Expresion . OBJECTID ( ) .)


state 113

    (30) Expresion -> Expresion @ TYPEID . OBJECTID . ( Expresion lista_expr )
    (31) Expresion -> Expresion @ TYPEID . OBJECTID . ( )
    (               shift and go to state 120


state 114

    (23) Expresion -> CASE Expresion OF lista_expr_case ESAC .
    .               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    @               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    =               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    DARROW          reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    <               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    +               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    -               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    /               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    *               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    ;               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    }               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    OF              reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    LOOP            reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    THEN            reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    )               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    ,               reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    POOL            reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    ELSE            reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)
    FI              reduce using rule 23 (Expresion -> CASE Expresion OF lista_expr_case ESAC .)


state 115

    (48) lista_expr_case -> OBJECTID : . TYPEID DARROW Expresion ; lista_expr_case
    (49) lista_expr_case -> OBJECTID : . TYPEID DARROW Expresion ;
    TYPEID          shift and go to state 121


state 116

    (24) Expresion -> WHILE Expresion LOOP Expresion POOL .
    .               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    @               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    =               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    DARROW          reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    <               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    +               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    -               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    /               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    *               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ;               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    }               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    OF              reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    LOOP            reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    THEN            reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    )               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ,               reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    POOL            reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    ELSE            reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)
    FI              reduce using rule 24 (Expresion -> WHILE Expresion LOOP Expresion POOL .)


state 117

    (25) Expresion -> IF Expresion THEN Expresion ELSE . Expresion FI
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 122

state 118

    (44) lista_expr -> , Expresion lista_expr .
    )               reduce using rule 44 (lista_expr -> , Expresion lista_expr .)


state 119

    (29) Expresion -> Expresion . OBJECTID ( Expresion lista_expr . )
    )               shift and go to state 123


state 120

    (30) Expresion -> Expresion @ TYPEID . OBJECTID ( . Expresion lista_expr )
    (31) Expresion -> Expresion @ TYPEID . OBJECTID ( . )
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    )               shift and go to state 125
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 124

state 121

    (48) lista_expr_case -> OBJECTID : TYPEID . DARROW Expresion ; lista_expr_case
    (49) lista_expr_case -> OBJECTID : TYPEID . DARROW Expresion ;
    DARROW          shift and go to state 126


state 122

    (25) Expresion -> IF Expresion THEN Expresion ELSE Expresion . FI
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    FI              shift and go to state 127
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 123

    (29) Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .
    .               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    @               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    =               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    DARROW          reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    <               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    +               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    -               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    /               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    *               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    ;               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    }               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    OF              reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    LOOP            reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    THEN            reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    )               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    ,               reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    POOL            reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    ELSE            reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)
    FI              reduce using rule 29 (Expresion -> Expresion . OBJECTID ( Expresion lista_expr ) .)


state 124

    (30) Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion . lista_expr )
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    (44) lista_expr -> . , Expresion lista_expr
    (45) lista_expr -> .
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67
    ,               shift and go to state 100
    )               reduce using rule 45 (lista_expr -> .)

    lista_expr                     shift and go to state 128

state 125

    (31) Expresion -> Expresion @ TYPEID . OBJECTID ( ) .
    .               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    @               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    =               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    DARROW          reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    <               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    +               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    -               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    /               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    *               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ;               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    }               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    OF              reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    LOOP            reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    THEN            reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    )               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ,               reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    POOL            reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    ELSE            reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)
    FI              reduce using rule 31 (Expresion -> Expresion @ TYPEID . OBJECTID ( ) .)


state 126

    (48) lista_expr_case -> OBJECTID : TYPEID DARROW . Expresion ; lista_expr_case
    (49) lista_expr_case -> OBJECTID : TYPEID DARROW . Expresion ;
    (17) Expresion -> . BOOL_CONST
    (18) Expresion -> . STR_CONST
    (19) Expresion -> . INT_CONST
    (20) Expresion -> . OBJECTID
    (21) Expresion -> . { lista_expr_pc }
    (22) Expresion -> . NEW TYPEID
    (23) Expresion -> . CASE Expresion OF lista_expr_case ESAC
    (24) Expresion -> . WHILE Expresion LOOP Expresion POOL
    (25) Expresion -> . IF Expresion THEN Expresion ELSE Expresion FI
    (26) Expresion -> . OBJECTID ( )
    (27) Expresion -> . OBJECTID ( Expresion lista_expr )
    (28) Expresion -> . Expresion . OBJECTID ( )
    (29) Expresion -> . Expresion . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> . Expresion @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> . Expresion @ TYPEID . OBJECTID ( )
    (32) Expresion -> . ~ Expresion
    (33) Expresion -> . ISVOID Expresion
    (34) Expresion -> . NOT Expresion
    (35) Expresion -> . ( Expresion )
    (36) Expresion -> . Expresion = Expresion
    (37) Expresion -> . Expresion DARROW Expresion
    (38) Expresion -> . Expresion < Expresion
    (39) Expresion -> . Expresion + Expresion
    (40) Expresion -> . Expresion - Expresion
    (41) Expresion -> . Expresion / Expresion
    (42) Expresion -> . Expresion * Expresion
    (43) Expresion -> . OBJECTID ASSIGN Expresion
    BOOL_CONST      shift and go to state 43
    STR_CONST       shift and go to state 44
    INT_CONST       shift and go to state 45
    OBJECTID        shift and go to state 41
    {               shift and go to state 46
    NEW             shift and go to state 47
    CASE            shift and go to state 48
    WHILE           shift and go to state 49
    IF              shift and go to state 50
    ~               shift and go to state 52
    ISVOID          shift and go to state 53
    NOT             shift and go to state 54
    (               shift and go to state 51

    Expresion                      shift and go to state 129

state 127

    (25) Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .
    .               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    @               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    =               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    DARROW          reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    <               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    +               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    -               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    /               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    *               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ;               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    }               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    OF              reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    LOOP            reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    THEN            reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    )               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ,               reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    POOL            reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    ELSE            reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)
    FI              reduce using rule 25 (Expresion -> IF Expresion THEN Expresion ELSE Expresion FI .)


state 128

    (30) Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr . )
    )               shift and go to state 130


state 129

    (48) lista_expr_case -> OBJECTID : TYPEID DARROW Expresion . ; lista_expr_case
    (49) lista_expr_case -> OBJECTID : TYPEID DARROW Expresion . ;
    (28) Expresion -> Expresion . . OBJECTID ( )
    (29) Expresion -> Expresion . . OBJECTID ( Expresion lista_expr )
    (30) Expresion -> Expresion . @ TYPEID . OBJECTID ( Expresion lista_expr )
    (31) Expresion -> Expresion . @ TYPEID . OBJECTID ( )
    (36) Expresion -> Expresion . = Expresion
    (37) Expresion -> Expresion . DARROW Expresion
    (38) Expresion -> Expresion . < Expresion
    (39) Expresion -> Expresion . + Expresion
    (40) Expresion -> Expresion . - Expresion
    (41) Expresion -> Expresion . / Expresion
    (42) Expresion -> Expresion . * Expresion
    ;               shift and go to state 131
    .               shift and go to state 59
    @               shift and go to state 60
    =               shift and go to state 61
    DARROW          shift and go to state 62
    <               shift and go to state 63
    +               shift and go to state 64
    -               shift and go to state 65
    /               shift and go to state 66
    *               shift and go to state 67


state 130

    (30) Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .
    .               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    @               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    =               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    DARROW          reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    <               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    +               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    -               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    /               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    *               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    ;               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    }               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    OF              reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    LOOP            reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    THEN            reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    )               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    ,               reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    POOL            reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    ELSE            reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)
    FI              reduce using rule 30 (Expresion -> Expresion @ TYPEID . OBJECTID ( Expresion lista_expr ) .)


state 131

    (48) lista_expr_case -> OBJECTID : TYPEID DARROW Expresion ; . lista_expr_case
    (49) lista_expr_case -> OBJECTID : TYPEID DARROW Expresion ; .
    (48) lista_expr_case -> . OBJECTID : TYPEID DARROW Expresion ; lista_expr_case
    (49) lista_expr_case -> . OBJECTID : TYPEID DARROW Expresion ;
    ESAC            reduce using rule 49 (lista_expr_case -> OBJECTID : TYPEID DARROW Expresion ; .)
    OBJECTID        shift and go to state 105

    lista_expr_case                shift and go to state 132

state 132

    (48) lista_expr_case -> OBJECTID : TYPEID DARROW Expresion ; lista_expr_case .
    ESAC            reduce using rule 48 (lista_expr_case -> OBJECTID : TYPEID DARROW Expresion ; lista_expr_case .)


Conflicts:

shift/reduce conflict for . in state 75 resolved as shift
shift/reduce conflict for @ in state 75 resolved as shift
shift/reduce conflict for = in state 75 resolved as shift
shift/reduce conflict for DARROW in state 75 resolved as shift
shift/reduce conflict for < in state 75 resolved as shift
shift/reduce conflict for + in state 75 resolved as shift
shift/reduce conflict for - in state 75 resolved as shift
shift/reduce conflict for / in state 75 resolved as shift
shift/reduce conflict for * in state 75 resolved as shift
shift/reduce conflict for . in state 76 resolved as shift
shift/reduce conflict for @ in state 76 resolved as shift
shift/reduce conflict for = in state 76 resolved as shift
shift/reduce conflict for DARROW in state 76 resolved as shift
shift/reduce conflict for < in state 76 resolved as shift
shift/reduce conflict for + in state 76 resolved as shift
shift/reduce conflict for - in state 76 resolved as shift
shift/reduce conflict for / in state 76 resolved as shift
shift/reduce conflict for * in state 76 resolved as shift
shift/reduce conflict for . in state 77 resolved as shift
shift/reduce conflict for @ in state 77 resolved as shift
shift/reduce conflict for = in state 77 resolved as shift
shift/reduce conflict for DARROW in state 77 resolved as shift
shift/reduce conflict for < in state 77 resolved as shift
shift/reduce conflict for + in state 77 resolved as shift
shift/reduce conflict for - in state 77 resolved as shift
shift/reduce conflict for / in state 77 resolved as shift
shift/reduce conflict for * in state 77 resolved as shift
shift/reduce conflict for . in state 82 resolved as shift
shift/reduce conflict for @ in state 82 resolved as shift
shift/reduce conflict for = in state 82 resolved as shift
shift/reduce conflict for DARROW in state 82 resolved as shift
shift/reduce conflict for < in state 82 resolved as shift
shift/reduce conflict for + in state 82 resolved as shift
shift/reduce conflict for - in state 82 resolved as shift
shift/reduce conflict for / in state 82 resolved as shift
shift/reduce conflict for * in state 82 resolved as shift
shift/reduce conflict for . in state 85 resolved as shift
shift/reduce conflict for @ in state 85 resolved as shift
shift/reduce conflict for = in state 85 resolved as shift
shift/reduce conflict for DARROW in state 85 resolved as shift
shift/reduce conflict for < in state 85 resolved as shift
shift/reduce conflict for + in state 85 resolved as shift
shift/reduce conflict for - in state 85 resolved as shift
shift/reduce conflict for / in state 85 resolved as shift
shift/reduce conflict for * in state 85 resolved as shift
shift/reduce conflict for . in state 86 resolved as shift
shift/reduce conflict for @ in state 86 resolved as shift
shift/reduce conflict for = in state 86 resolved as shift
shift/reduce conflict for DARROW in state 86 resolved as shift
shift/reduce conflict for < in state 86 resolved as shift
shift/reduce conflict for + in state 86 resolved as shift
shift/reduce conflict for - in state 86 resolved as shift
shift/reduce conflict for / in state 86 resolved as shift
shift/reduce conflict for * in state 86 resolved as shift
shift/reduce conflict for . in state 87 resolved as shift
shift/reduce conflict for @ in state 87 resolved as shift
shift/reduce conflict for = in state 87 resolved as shift
shift/reduce conflict for DARROW in state 87 resolved as shift
shift/reduce conflict for < in state 87 resolved as shift
shift/reduce conflict for + in state 87 resolved as shift
shift/reduce conflict for - in state 87 resolved as shift
shift/reduce conflict for / in state 87 resolved as shift
shift/reduce conflict for * in state 87 resolved as shift
shift/reduce conflict for . in state 88 resolved as shift
shift/reduce conflict for @ in state 88 resolved as shift
shift/reduce conflict for = in state 88 resolved as shift
shift/reduce conflict for DARROW in state 88 resolved as shift
shift/reduce conflict for < in state 88 resolved as shift
shift/reduce conflict for + in state 88 resolved as shift
shift/reduce conflict for - in state 88 resolved as shift
shift/reduce conflict for / in state 88 resolved as shift
shift/reduce conflict for * in state 88 resolved as shift
shift/reduce conflict for . in state 89 resolved as shift
shift/reduce conflict for @ in state 89 resolved as shift
shift/reduce conflict for = in state 89 resolved as shift
shift/reduce conflict for DARROW in state 89 resolved as shift
shift/reduce conflict for < in state 89 resolved as shift
shift/reduce conflict for + in state 89 resolved as shift
shift/reduce conflict for - in state 89 resolved as shift
shift/reduce conflict for / in state 89 resolved as shift
shift/reduce conflict for * in state 89 resolved as shift
shift/reduce conflict for . in state 90 resolved as shift
shift/reduce conflict for @ in state 90 resolved as shift
shift/reduce conflict for = in state 90 resolved as shift
shift/reduce conflict for DARROW in state 90 resolved as shift
shift/reduce conflict for < in state 90 resolved as shift
shift/reduce conflict for + in state 90 resolved as shift
shift/reduce conflict for - in state 90 resolved as shift
shift/reduce conflict for / in state 90 resolved as shift
shift/reduce conflict for * in state 90 resolved as shift
shift/reduce conflict for . in state 91 resolved as shift
shift/reduce conflict for @ in state 91 resolved as shift
shift/reduce conflict for = in state 91 resolved as shift
shift/reduce conflict for DARROW in state 91 resolved as shift
shift/reduce conflict for < in state 91 resolved as shift
shift/reduce conflict for + in state 91 resolved as shift
shift/reduce conflict for - in state 91 resolved as shift
shift/reduce conflict for / in state 91 resolved as shift
shift/reduce conflict for * in state 91 resolved as shift